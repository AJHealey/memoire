
#include "wpa_ctrl/wpa_ctrl.h"
#include "script2.h"

#define DEFAULT_CTRL_IFACE "/tmp/run/wpa_supplicant/wlan0"

static struct wpa_ctrl *ctrl;

static void logevent(enum log_events log, const char *arg) {
	static int stderr = 0;
	static int isOpen = 0;

	if(log == WPA_LOG_STDERR){
		stderr = 1;
		return ;
	}
	
	if(!isOpen && !stderr) {
		openlog("script2", LOG_PID, LOG_DAEMON);
		isOpen = 1;
	}

	switch(log) {
		case WPA_LOG_STARTED:
			if(!stderr)
				syslog(LOG_NOTICE, "Starting script");
			else
				fprintf(stderr, "Starting script \n");
			break;
		case WPA_LOG_CONNECTED:
			if(!stderr)
				syslog(LOG_NOTICE, "Interface connected to network: '%s'", arg);
			else
				fprintf(stderr, "Interface connected to network: '%s'\n", arg);
			break;
		case WPA_LOG_DISCONNECTED:
			if(!stderr)
				syslog(LOG_NOTICE, "Interface disconnected from network: '%s'", arg);
			else
				fprintf(stderr, "Interface disconnected from network: '%s'\n", arg);
			break;
		case WPA_LOG_CONNECTION_LOST:
			if(!stderr)
				syslog(LOG_NOTICE, "Interface lost connection to network: '%s'", arg);
			else
				fprintf(stderr, "Interface lost connection to network: '%s'\n", arg);
			break;
		case WPA_LOG_CONNECTION_REESTABLISHED:
			if(!stderr)
				syslog(LOG_NOTICE, "Interface reestablished connection to network: '%s'", arg);
			else
				fprintf(stderr, "Interface reestablished connection to network: '%s'\n", arg);
			break;
		case WPA_LOG_TERMINATE:
			if(!stderr)
				syslog(LOG_NOTICE, "Script terminated", arg);
			else
				fprintf(stderr, "Script terminated\n", arg);
			break;
		case WPA_LOG_FAILED:
			if(!stderr)
				syslog(LOG_NOTICE, "Interface connection failed";);
			else
				fprintf(stderr, "Interface connection failed\n");
			break;
		case WPA_LOG_ERROR:
			if(!stderr)
				syslog(LOG_ERR, "Error: %m", arg);
			else
				fprintf(stderr, "Error: %s%s\n", arg, strerror(errno));
			break;
		case WPA_LOG_CUSTOM_ERROR:
			if(!stderr)
				syslog(LOG_NOTICE, "Error: %s", arg);
			else
				fprintf(stderr, "Error: %s\n", arg);
			break;
	}	
}


int main(int argc, char ** argv) {
	
}
